SacredBrowser - MongoDB Browser for results created with the Sacred framework.

OVERVIEW
--------

This tool is a database browser for MongoDB, intended to work with databases created by the
Sacred framework (https://github.com/IDSIA/sacred), which you have to setup properly before using 
SacredBrowser. Follow the instructions in the Sacred distribution write results into a database, 
then use this program for browsing the results.

No installation is necessary - just run Sacredbrowser.py from the current directory and click
"Connect to database". If your database is not local, make sure you have got enough 
permissions to connect to the database. You may use the local "mongo" shell command
for troubleshooting.

REQUIREMENTS
------------

SacredBrowser requires the PyQt4 and pymongo packages. You also want to have a Sacred installation
on the server where you run your experiments, but it is not necessary to have a local installation.

USAGE 
-----

After connecting to a MongoDB instance (lowerleft button), the tree view to the left shows you all available 
databases. Note that the information belonging to your experiments may be split across several
MongoDB collections, and that you may have a set of separate collections for different parts of 
your experiment. These are distinguished by the prefix passed to MongoObserver.create, all found prefixes
are shown as children in the database tree (with a special case for older Sacred versions). After choosing
a collection, the right part of the screen will populate.

Use the top central widget to choose which database fields to display (and their order), the top right
widget allows filtering the database. Click on "Sort dialog" to sort entries, note that you
can choose several ordering criteria of differing priority. You can delete entries from the main display widget
by clicking "Delete" or pressing the DEL key. "Copy" copies the selection into the system clipboard, and
"Full entry" displays the details of an entry. In the "Full entry" dialog, you can examine and save attached
source files and experiment artifacts.

The color of an entry (mostly) indicates its status: blue indicates that the entry is marked as running, 
red/dark red stands for interrupted/failed runs. Furthermore, yellow stands for duplicates (detecting
duplicates is still kind of a hack and will certainly be substantially reworked).

Settings are saved between program runs, in the file ~/.sacredbrowserrc.

REMARK
------

********************************************************
This software is in Alpha status and under development! Please expect that some details
might not work properly :-)

Please direct suggestions for features, bug reports, etc., to me! michael@idsia.ch
********************************************************
